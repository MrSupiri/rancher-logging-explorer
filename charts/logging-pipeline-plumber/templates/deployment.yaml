apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "logging-pipeline-plumber.fullname" . }}
  labels:
    {{- include "logging-pipeline-plumber.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "logging-pipeline-plumber.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "logging-pipeline-plumber.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "logging-pipeline-plumber.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args: [
            "-aggregator-namespace={{ .Release.Namespace }}",
            "-pod-simulator-image-repository={{ .Values.podSimulatorImage.repository }}",
            "-pod-simulator-image-tag={{ .Values.podSimulatorImage.tag | default .Chart.AppVersion }}",
            "-pod-simulator-image-pull-policy={{ .Values.podSimulatorImage.pullPolicy }}",
            "-log-output-image-repository={{ .Values.logOutputImage.repository }}",
            "-log-output-image-tag={{ .Values.logOutputImage.tag }}",
            "-log-output-image-pull-policy={{ .Values.logOutputImage.pullPolicy }}",
          ]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
